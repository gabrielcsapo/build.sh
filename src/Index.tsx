import "psychic.css/dist/psychic.min.css";
import "./style.css";

import React, { Component } from "react";
import { createRoot } from "react-dom/client";

import { Stages } from "./Stages";
import { Pipeline } from "./Pipeline";

interface ContainerProps {
  pipeline: any[];
  git?: any;
  process?: string;
  environment: any;
  config: any;
}

interface ContainerState {
  hash: string;
  selectedStage: React.ReactElement;
}

class Container extends Component<ContainerProps, ContainerState> {
  constructor(props: ContainerProps) {
    super(props);
    this.state = {
      hash: location.hash,
      selectedStage: (
        <Stages
          name={props.pipeline[0].name}
          stages={props.pipeline[0].children}
        />
      ),
    };
  }
  updateHash(hash: any) {
    this.setState({
      hash,
    });
  }
  showStages(parent: any) {
    const { name, stage } = parent;

    this.setState({
      selectedStage: <Stages name={name} stages={stage.children} />,
    });
  }
  render() {
    const { pipeline, git, environment, config } = this.props;
    const { hash, selectedStage } = this.state;

    document.title = "Build Report";

    return (
      <div id="container">
        <div className="navbar">
          <div className="container">
            <div
              className="nav text-black"
              style={{
                margin: 0,
                textAlign: "center",
                display: "inline-block",
                width: "100%",
              }}
            >
              <a
                className={hash === "" ? "active" : ""}
                onClick={this.updateHash.bind(this, "")}
              >
                Pipeline
              </a>
              {config ? (
                <a
                  className={hash === "#config" ? "active" : ""}
                  onClick={this.updateHash.bind(this, "#config")}
                >
                  Config
                </a>
              ) : (
                ""
              )}
              <a
                className={hash === "#environment" ? "active" : ""}
                onClick={this.updateHash.bind(this, "#environment")}
              >
                Environment
              </a>
              <a
                className={hash === "#report" ? "active" : ""}
                onClick={this.updateHash.bind(this, "#report")}
              >
                Report
              </a>
            </div>
          </div>
        </div>
        <div id="container-content">
          {hash === "" ? (
            <div>
              <div className="pipeline-container">
                <Pipeline
                  stages={pipeline}
                  defaultSelectStage={pipeline && pipeline[0] && pipeline[0]}
                  onSelect={this.showStages.bind(this)}
                />
              </div>
              <div className="stages-container">{selectedStage}</div>
            </div>
          ) : (
            ""
          )}
          {hash === "#environment" ? (
            <div style={{ width: "90%", margin: "0 auto" }}>
              <pre style={{ whiteSpace: "pre" }}>
                {JSON.stringify(
                  {
                    environment,
                    git,
                  },
                  null,
                  4
                )}
              </pre>
            </div>
          ) : (
            ""
          )}
          {hash === "#report" ? (
            <div style={{ width: "90%", margin: "0 auto" }}>
              <pre style={{ whiteSpace: "pre" }}>
                {JSON.stringify(
                  {
                    pipeline,
                  },
                  null,
                  4
                )}
              </pre>
            </div>
          ) : (
            ""
          )}
          {hash === "#config" ? (
            <div style={{ width: "90%", margin: "0 auto" }}>
              <pre style={{ whiteSpace: "pre" }}>
                {JSON.stringify(
                  {
                    config,
                  },
                  null,
                  4
                )}
              </pre>
            </div>
          ) : (
            ""
          )}
        </div>
        <div className="footer" style={{ textAlign: "center" }}>
          <div className="text-black">
            Generated by{" "}
            <a
              href="https://www.gabrielcsapo.com/build.sh"
              style={{ borderBottom: "1px dotted #000" }}
            >
              build.sh
            </a>
          </div>
        </div>
      </div>
    );
  }
}

try {
  const container = document.getElementById("root");
  const root = createRoot(container!);
  // @ts-ignore
  root.render(<Container {...config} />);
} catch (ex) {}

export default Container;
